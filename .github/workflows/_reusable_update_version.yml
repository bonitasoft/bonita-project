name: Update Version

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: "Bonita technical version (e.g. 10.1.0.beta-01)"
        required: true
      brandingVersion:
        type: string
        description: "Bonita branding version (e.g. 2024.2-b1)"
        required: true
      merge-upstream-ignoring-conflicts:
        type: boolean
        default: false
    secrets:
      KSM_CONFIG:
        required: true
      BONITA_CI_PAT:
        required: true

jobs:
  update-version:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          repository: bonitasoft/bonita-project
          token: ${{ secrets.BONITA_CI_PAT }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: Setup Maven
        uses: bonitasoft/maven-settings-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }}

      - name: Git Setup
        uses: bonitasoft/git-setup-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }}

      - name: Update version
        run: |
          ./mvnw -ntp versions:set -DnewVersion=${{ inputs.version }} -Ptests
          ./mvnw -ntp -f parent versions:set-property -Dproperty=branding.version -DnewVersion=${{ inputs.brandingVersion }}
          ./mvnw -ntp -f parent versions:set-property -Dproperty=bonita.runtime.version -DnewVersion=${{ inputs.version }}

      - name: Commit and push changes
        run: |
          git commit -a -m "chore(versioning): update version to ${{ inputs.brandingVersion }} (${{ inputs.version }})"
          git push

  merge-upstream:
    needs: update-version
    if: ${{ inputs.merge-upstream-ignoring-conflicts }}
    runs-on: ubuntu-24.04
    steps:
      - name: Setup git
        uses: bonitasoft/git-setup-action@v1
        with:
          keeper-secret-config: ${{ secrets.KSM_CONFIG }}

      - name: Determine upstream branch
        id: upstream-branch
        run: echo "ref=${{ fromJson(vars.SUPPORTED_BRANCHES).upstream-branch[github.ref_name] }}" >> $GITHUB_OUTPUT

      - name: Checkout upstream branch
        uses: actions/checkout@v4
        with:
          repository: bonitasoft/bonita-project
          ref: ${{ steps.upstream-branch.outputs.ref }}
          fetch-depth: 0
          token: ${{ secrets.BONITA_CI_PAT }}

      - name: Merge upstream branch
        run: |
          git config merge.ours.driver true
          git merge origin/${{ github.ref_name }} -X ours  -m "chore(merge): ${{ github.ref_name }} into ${{ steps.upstream-branch.outputs.ref }}"
          git push
